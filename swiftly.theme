<?php

/**
 * @file
 * Functions to support theming.
 */

 // Add a region variable to a block.
 // http://kristiankaa.dk/article/drupal8-region-specific-menu-theme-hook-suggestion
function swiftly_preprocess_block(&$variables) {
    if (isset($variables["elements"]["#id"])) {
        $block_id = $variables["elements"]["#id"];
        $block = \Drupal\block\Entity\Block::load($block_id);

        if ($block) {
            $variables["content"]["#attributes"]["region"] = $block->getRegion();
        }
    }
}

// add a template suggestion based on region name
// http://kristiankaa.dk/article/drupal8-region-specific-menu-theme-hook-suggestion
function swiftly_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
    if (isset($variables["attributes"]["region"])) {
        $suggestions[] = $variables["theme_hook_original"] . "__" . $variables["attributes"]["region"];
    }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function swiftly_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add theme suggestions for img elements.
 */
function swiftly_theme_suggestions_image_alter(array &$suggestions, array $variables) {
  if (isset($variables['style_name']) && !is_null($variables['style_name'])) {
    $suggestion = 'image__' . $variables['style_name'];
    $suggestion = str_replace('-', '_', $suggestion);
    $suggestions[] = $suggestion;
  }
}

/** fuer menu_attributes:
 * svg icons als svg sprite bereitstellen
 * passendes sprite auswaehlen
 */
 use Drupal\Component\Render\FormattableMarkup;

 /**
  * Implements theme_preprocess_menu().
  */
 function swiftly_preprocess_menu(&$variables, $hook) {
   foreach ($variables['items'] as &$item) {
     $attributes = $item['url']->getOption('attributes');
     if (isset($attributes['data-icon'])) {
       $title = new FormattableMarkup('
        <div class="flex gap-1 items-center">
         <svg class="icon @icon" viewbox="0 0 24 24"><use xlink:href="#@icon"></use></svg>
         <span class="hidden md:block">@title</span>
        </div>
       ', [
         '@title' => $item['title'],
         '@icon' => $attributes['data-icon'],
       ]);
       $item['title'] = $title;
     }
   }
 }

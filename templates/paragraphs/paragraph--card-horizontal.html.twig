{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}

    {% set image_orientation = 'card__horizontal--' ~ paragraph.field_card_image_position.value %}
    {% set figure_width = '' ~ paragraph.field_card_image_width.value %}
    {% set body_width = 'w-1/2' %}

    {% if figure_width == 'w-1/2' %}
      {% set figure_width = 'w-full md:w-1/2'%}
      {% set body_width = 'w-full md:w-1/2' %}
    {% elseif figure_width == 'w-1/3' %}
      {% set figure_width = 'w-full md:w-1/3'%}
      {% set body_width = 'w-full md:w-2/3' %}
    {% elseif figure_width == 'w-1/4' %}
      {% set figure_width = 'w-full md:w-1/4'%}
      {% set body_width = 'w-full md:w-3/4' %}
    {% endif %}

    <div class="{{ image_orientation }}">
      <div class="card__body {{ body_width }}">
        <div class="card__title">{{ content.field_card_title }}</div>
        <div class="card__subtitle">{{ content.field_card_subtitle }}</div>
        <div class="card__text">{{ content.field_card_text }}</div>

        {% set button_class = 'btn ' ~ paragraph.field_card_button_classes.value %}

        <a class="{{ button_class }}" href="{{ content.field_card_button[0]['#url'] }}">{{ paragraph.field_card_button.value[0]['title'] }}</a>
      </div>
      <div class="card__figure {{ figure_width }}">
        {% set path = file_url(paragraph.field_card_image.entity.field_media_image.entity.uri.value) %}
        {% set width = paragraph.field_card_image.entity.field_media_image.width %}
        {% set height = paragraph.field_card_image.entity.field_media_image.height %}
        {% set alt = paragraph.field_card_image.entity.field_media_image.alt %}
        {% set title = paragraph.field_card_image.entity.field_media_image.title %}
        <img class="card__image" src="{{ path }}" width="{{ width }}" height="{{ height }}" alt="{{ alt }}" title="{{ title }}">
      </div>
    </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
